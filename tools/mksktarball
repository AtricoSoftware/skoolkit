#!/usr/bin/env bash
set -e # Abort on errors

usage() {
  cat <<EOF
Usage: $(basename $0) [options]

  Create a release tarball and zip archive of SkoolKit.

Options:
  -h  Show this help
  -n  Omit documentation and man pages
  -q  Be quiet
  -t  Write only the release tarball
EOF
  exit 1
}

info() {
  if [ $VERBOSE -eq 1 ]; then
    echo $*
  fi
}

if [ -z "$SKOOLKIT_HOME" ]; then
  echo "Error: SKOOLKIT_HOME not defined."
  exit 1
fi
if [ ! -d "$SKOOLKIT_HOME" ]; then
  echo "Error: directory not found: $SKOOLKIT_HOME"
  exit 1
fi

cd $SKOOLKIT_HOME
VERSION=$(./skool2html.py -V 2>&1 | cut -f2 -d' ')
PKGNAME=skoolkit-$VERSION
PKGDIR=$PKGNAME

VERBOSE=1
WRITE_ZIP=1
INCLUDE_DOCS=1

while getopts ":hnpqt" opt; do
  case $opt in
    h) usage ;;
    n) INCLUDE_DOCS=0 ;;
    q) VERBOSE=0 ;;
    t) WRITE_ZIP=0 ;;
  esac
done

DISTDIR=$SKOOLKIT_HOME/dist
mkdir -p $DISTDIR
ABSDIR=${DISTDIR}/${PKGDIR}
rm -rf ${ABSDIR}

rsync -aR \
  {bin2{sna,tap},skool2{asm,bin,ctl,html,sft},sna2{img,skool},snap{info,mod},tap{2sna,info}}.py \
  skoolkit/{__init__,basic,bin2{sna,tap},config,ctlparser,defaults,disassembler,gifwriter,graphics,image,pngwriter,refparser,sftparser,skool{{,2}{asm,ctl,html,sft},2bin,macro,parser},sna2img,sna{,2}skool,snap{info,mod,shot},tap{2sna,info},textutils,z80}.py \
  examples/hungry_horace.{ctl,ref,t2s} \
  skoolkit/resources/skoolkit{,-dark,-green,-plum,-wide}.css \
  tests/{{macro,skoolkit}test,test_{basic,bin2{sna,tap},ctlparser,disassembler,graphics,image,skool{{,2}{asm,ctl,html,sft},2bin,macro,parser},refparser,sftparser,skoolkit,sna2img,sna{2,}skool,snap{info,mod,shot},tap{2sna,info},textutils,z80}}.py \
  COPYING MANIFEST.in setup.py \
  $ABSDIR

if [[ $INCLUDE_DOCS == 1 ]]; then
  # Documentation and man pages
  cd $SKOOLKIT_HOME/sphinx
  rm -rf build/*
  if ! make html &> /dev/null; then
    echo "*** Error building documentation; aborting"
    exit 1
  fi
  rm -rf build/html/man
  DOCSDIR=${ABSDIR}/docs
  mkdir -p $DOCSDIR
  rsync -a --exclude=.buildinfo --exclude=objects.inv build/html/ $DOCSDIR
  if ! make man &> /dev/null; then
    echo "*** Error building man pages; aborting"
    exit 1
  fi
  MANDIR=${ABSDIR}/man/man1
  mkdir -p $MANDIR
  rsync -a build/man/*.py.1 $MANDIR
fi

cd $DISTDIR

info "Creating ${DISTDIR}/${PKGNAME}.tar.xz"
tar acf ${PKGNAME}.tar.xz $PKGDIR

if [ $WRITE_ZIP -eq 1 ]; then
  info "Creating ${DISTDIR}/${PKGNAME}.zip"
  zip -9qr ${PKGNAME}.zip $PKGDIR
fi
